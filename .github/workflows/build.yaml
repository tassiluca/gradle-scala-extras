name: Build, Test and Check plugin

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - '.gitignore'
      - 'renovate.json'
      - '.mergify.yml'
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  Dispatcher:
    runs-on: ubuntu-24.04
    if: >- # Prevents running the workflow twice on PR made by a branch of the same repository
      github.event_name != 'pull_request'
      || github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - run: 'true'

  Build-Test-Check-Dry-Deploy:
    needs:
      - Dispatcher
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
    concurrency:
      # If multiple commits are pushed to the same branch or added to the same PR,
      # only the workflow for the latest commit will be run
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Get repository name
        id: get_repo_name
        run: echo "repo_name=${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT
      - name: Copy project to C drive on Windows
        if: contains(matrix.os, 'windows')
        run: |
          mkdir -p /c/${{ steps.get_repo_name.outputs.repo_name }}
          cp -r ./* .* /c/${{ steps.get_repo_name.outputs.repo_name }}
          ls -alh /c/${{ steps.get_repo_name.outputs.repo_name }}
      - name: Build, test, check and dry deployment
        uses: DanySK/build-check-deploy-gradle-action@43d6d85dcd1b05b4456b8a444ada6951bf6bab4a # 3.5.12
        with:
          build-command: |
            if [[ "$RUNNER_OS" == "Windows" ]]; then
              cd /c/${{ steps.get_repo_name.outputs.repo_name }}
            fi
            ./gradlew classes testClasses --parallel
          check-command: |
            if [[ "$RUNNER_OS" == "Windows" ]]; then
                cd /c/${{ steps.get_repo_name.outputs.repo_name }}
            fi
            ./gradlew check --parallel
          deploy-command: >-
            ./gradlew
            uploadKotlinOSSRHToMavenCentralNexus
            uploadPluginMavenToMavenCentralNexus
            uploadPluginMarkerMavenToMavenCentralNexus
            close
            drop
            --parallel
          should-run-codecov: false
          should-deploy: >-
            ${{
              runner.os == 'Linux'
              && !github.event.repository.fork
              && github.event_name != 'pull_request'
            }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  Deploy:
    permissions:
      contents: write
      packages: write
    needs:
      - Build-Test-Check-Dry-Deploy
    if: >- # Only react to push to the `master` branch of the main repository
      !github.event.repository.fork && github.event_name != 'pull_request' && github.ref_name == 'master'
    concurrency:
      # Ensuring sequential execution of releases
      group: release
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout the whole repository history
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version-file: package.json
      - uses: DanySK/build-check-deploy-gradle-action@43d6d85dcd1b05b4456b8a444ada6951bf6bab4a # 3.5.12
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  Success:
    needs:
      - Build-Test-Check-Dry-Deploy
      - Deploy
    if: >- # Requires that at least one needed job has failed, or all needed jobs have not been canceled
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    runs-on: ubuntu-24.04
    steps:
      - name: Verify no failures occurred in needed jobs
        # if there are failures, false is executed and the job fails.
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
