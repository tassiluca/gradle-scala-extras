name: Build, Test and Check plugin

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - '.gitignore'
      - 'renovate.json'
      - '.mergify.yml'
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  Build-Test-Check-Dry-Deploy:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        jvm_version: [21]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Copy project to C drive on Windows
        if: contains(matrix.os, 'windows')
        run: |
          mkdir -p /c/gradle-scala-extras
          cp -r ./* .* /c/gradle-scala-extras
          ls -alh /c/gradle-scala-extras
      - name: Build, test, check and dry deployment
        uses: DanySK/build-check-deploy-gradle-action@3.3.0
        with:
          build-command: |
            if [[ "$RUNNER_OS" == "Windows" ]]; then
              cd /c/gradle-scala-extras
            fi
            ./gradlew classes testClasses --parallel
          check-command: |
            if [[ "$RUNNER_OS" == "Windows" ]]; then
                cd /c/gradle-scala-extras
            fi
            ./gradlew check --parallel
          deploy-command: >-
            ./gradlew
            uploadKotlinOSSRHToMavenCentralNexus
            uploadPluginMavenToMavenCentralNexus
            uploadPluginMarkerMavenToMavenCentralNexus
            close
            drop
            --parallel
          should-run-codecov: false
          should-deploy: >-
            ${{
              runner.os == 'Linux'
              && !github.event.repository.fork
              && github.event_name != 'pull_request'
            }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  Deploy:
    permissions:
      contents: write
      packages: write
    needs:
      - Build-Test-Check-Dry-Deploy
    if: >-
      !github.event.repository.fork
      && github.event_name != 'pull_request'
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the whole repository history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v4.0.3
        with:
          node-version-file: package.json
      - uses: DanySK/build-check-deploy-gradle-action@3.4.0
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}
