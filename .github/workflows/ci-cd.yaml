name: Build And Publish

on:
  workflow_call:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  Build-Test-Check-Dry-Release:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-15, windows-2025]
    concurrency:
      # If multiple commits are pushed to the same branch or added to the same PR,
      # only the workflow for the latest commit will be run
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Get repository name
        id: get_repo_name
        run: echo "repo_name=${GITHUB_REPOSITORY##*/}" >> $GITHUB_OUTPUT
      - name: Copy project to C drive on Windows
        if: contains(matrix.os, 'windows')
        run: |
          mkdir -p /c/${{ steps.get_repo_name.outputs.repo_name }}
          cp -r ./* .* /c/${{ steps.get_repo_name.outputs.repo_name }}
          ls -alh /c/${{ steps.get_repo_name.outputs.repo_name }}
      - name: Build, test, check and dry deployment
        uses: DanySK/build-check-deploy-gradle-action@34090754388a13138fee87e50771790ac89ac7ff # 4.0.5
        with:
          build-command: |
            if [[ "$RUNNER_OS" == "Windows" ]]; then
              cd /c/${{ steps.get_repo_name.outputs.repo_name }}
            fi
            ./gradlew classes testClasses --parallel
          check-command: |
            if [[ "$RUNNER_OS" == "Windows" ]]; then
                cd /c/${{ steps.get_repo_name.outputs.repo_name }}
            fi
            ./gradlew check --parallel
          deploy-command: >-
            ./gradlew
            publishAllPublicationsToProjectLocalRepository
            zipMavenCentralPortalPublication
            releaseMavenCentralPortalPublication
            --dry-run
          should-run-codecov: false
          should-deploy: >-
            ${{
              runner.os == 'Linux'
              && !github.event.repository.fork
              && github.event_name != 'pull_request'
            }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  Release:
    needs:
      - Build-Test-Check-Dry-Release
    permissions:
      contents: write
      packages: write
    if: >- # Only react to push to the default branch of the main repository
      !github.event.repository.fork && github.event_name != 'pull_request'
        && github.ref_name == github.event.repository.default_branch
    concurrency:
      # Ensuring sequential execution of releases
      group: release
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout the whole repository history
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version-file: package.json
      - uses: DanySK/build-check-deploy-gradle-action@34090754388a13138fee87e50771790ac89ac7ff # 4.0.5
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          retries-on-failure: 1
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.SIGNING_KEY }}
          signing-password: ${{ secrets.SIGNING_PASSWORD }}

  Success:
    needs:
      - Build-Test-Check-Dry-Release
      - Release
    if: >- # Requires that at least one needed job has failed, or all needed jobs have not been canceled
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    runs-on: ubuntu-24.04
    steps:
      - name: Verify no failures occurred in needed jobs
        # if there are failures, false is executed and the job fails.
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
